name: Release

on:
  push:
    tags:
      - 'v*'

# Prevent concurrent releases
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

env:
  CARGO_TERM_COLOR: always

jobs:
  # Build release binaries for multiple platforms
  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: runcept
            asset_name: runcept-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: runcept.exe
            asset_name: runcept-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: runcept
            asset_name: runcept-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: runcept
            asset_name: runcept-macos-aarch64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "release-${{ matrix.target }}"

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }} --bin runcept

      - name: Strip binary (Unix)
        if: matrix.os != 'windows-latest'
        run: strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

  # Create GitHub release
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
          generate_release_notes: true
          files: |
            artifacts/runcept-linux-x86_64/runcept
            artifacts/runcept-windows-x86_64.exe/runcept.exe
            artifacts/runcept-macos-x86_64/runcept
            artifacts/runcept-macos-aarch64/runcept
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Publish to crates.io (optional)
  publish:
    name: Publish to Crates.io
    runs-on: ubuntu-latest
    needs: release
    if: ${{ !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "publish"

      - name: Publish to crates.io
        run: cargo publish --token ${{ secrets.CRATES_TOKEN }}
        continue-on-error: true  # Don't fail if already published